//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "aliment_per_donation")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id_aliments: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id_donation: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::aliments::Entity",
        from = "Column::IdAliments",
        to = "super::aliments::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Aliments,
    #[sea_orm(
        belongs_to = "super::donation::Entity",
        from = "Column::IdDonation",
        to = "super::donation::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Donation,
}

impl Related<super::aliments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Aliments.def()
    }
}

impl Related<super::donation::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Donation.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
