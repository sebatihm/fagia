//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::RType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "credentials")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub email: String,
    pub password: String,
    pub r_type: RType,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::benefactor::Entity")]
    Benefactor,
    #[sea_orm(has_many = "super::donator::Entity")]
    Donator,
}

impl Related<super::benefactor::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Benefactor.def()
    }
}

impl Related<super::donator::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Donator.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
